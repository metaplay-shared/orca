import{d as G,E,h as w,c as s,r as B,e as I,o as v,w as u,a as D,f as r,a6 as F,k as o,j as p,ae as U,q as x,m as J,_ as M,t as q,bs as z,bt as R}from"./index-DAyiym1a.js";import{g as W}from"./experiments-B0m-qIFs.js";import{a as Y}from"./players-CkgXyjra.js";import{_ as S}from"./MInputSingleSelectDropdown.vue_vue_type_script_setup_true_lang-BRIBVSuX.js";import{_ as H}from"./MInputCheckbox.vue_vue_type_script_setup_true_lang-CmGaUCkv.js";import{_ as K}from"./MInputHintMessage.vue_vue_type_script_setup_true_lang-B7AbTbVm.js";import{_ as L}from"./MActionModalButton.vue_vue_type_script_setup_true_lang-CRnsCPt_.js";import"./MActionModal.vue_vue_type_script_setup_true_lang-XDUxofmt.js";import"./index-CVSO09yM.js";const Q={key:1,class:"tw-space-y-3"},X={class:"tw-pt-2"},se=G({__name:"PlayerActionJoinExperiments",props:{playerId:{}},setup(T){const k=T,g=z(),{data:n,refresh:N}=E(Y(k.playerId)),{data:b}=E(W()),e=w(y()),$=s(()=>Object.values(b.value?.experiments??[]).filter(a=>["Inactive","Testing","Ongoing","Paused"].includes(a.phase)&&a.whyInvalid===null).map(a=>({value:a.experimentId,label:Object.keys(n.value.model.experiments.experimentGroupAssignment).includes(a.experimentId)?`${a.displayName} / ${a.experimentId} (already enrolled)`:a.displayName}))),m=w([]);async function A(l){if(l===null)return;e.value.experimentId=l;const t=Object.entries(_.value).filter(([i,h])=>h.isPlayerTester);if(e.value.isTester=t.find(([i,h])=>i===e.value.experimentId)!==void 0,f.value?e.value.variantId=n.value.model.experiments.experimentGroupAssignment[e.value.experimentId]?.variantId??"Control group":e.value.variantId=null,m.value=[],!e.value.experimentId||e.value.experimentId==="none")return;const a=await g.get(`/experiments/${e.value.experimentId}`),d=Object.keys(a.data.state.variants).map(i=>({value:i,label:n.value.model.experiments.experimentGroupAssignment[e.value.experimentId]?.variantId===i?`${i} (already enrolled)`:i}));m.value=[{value:"Control group",label:"Control group"},...d]}const{showSuccessNotification:V}=R(),c=s(()=>!e.value.experimentId||!e.value.variantId?"Please select an experiment and variant.":f.value&&P.value?_.value[e.value.experimentId]?.isPlayerTester!==e.value.isTester?void 0:"No changes detected.":void 0);async function O(){const l=f.value?`${n.value.model.playerName} changed experiment variant.`:`${n.value.id} enrolled into the experiment.`,t=e.value.variantId==="Control group"?null:e.value.variantId;await g.post(`/players/${n.value.id}/changeExperiment`,{ExperimentId:e.value.experimentId,VariantId:t,IsTester:e.value.isTester}),V(l),N()}function C(){e.value=y(),m.value=[{value:"none",label:"Select an experiment"}]}function y(){return{experimentId:null,variantId:null,isTester:!1}}const j=s(()=>(b.value?.experiments??[]).length>0),_=s(()=>n.value.experiments),f=s(()=>e.value.experimentId===null?!1:Object.keys(n.value.model.experiments.experimentGroupAssignment).includes(e.value.experimentId)),P=s(()=>{if(e.value.variantId===null||e.value.experimentId===null)return!1;const l=e.value.variantId==="Control group"?null:e.value.variantId;return n.value.model.experiments.experimentGroupAssignment[e.value.experimentId]?.variantId===l});return(l,t)=>{const a=B("meta-no-seatbelts");return v(),I(r(L),{"trigger-button-disabled-tooltip":r(n)?"":"Waiting for player data..","modal-title":"Join an Experiment",action:O,"trigger-button-label":"Join Experiment",variant:"warning","ok-button-label":"Save","ok-button-disabled-tooltip":c.value,"confirm-permission":"api.players.edit_experiment_groups",onShow:C,"data-testid":"action-join-experiment"},{default:u(()=>[j.value?(v(),D("div",Q,[x("div",null,[t[5]||(t[5]=o("You can manually enroll ",-1)),p(r(M),null,{default:u(()=>[o(q(r(n).model.playerName),1)],void 0,!0),_:1}),t[6]||(t[6]=o(" in an active experiment, or change their variant in an experiment they are already in.",-1))]),t[9]||(t[9]=x("div",{class:"tw-text-xs+ tw-text-neutral-500"},"Note: Players can never leave experiments once enrolled, but you can always change their variant. Moving a player to the control group has the same effect as removing a player from an experiment.",-1)),p(r(S),{label:"Experiment","model-value":e.value.experimentId,options:$.value,placeholder:"Select an experiment","onUpdate:modelValue":A},null,8,["model-value","options"]),p(r(S),{label:"Variant","model-value":e.value.variantId,options:m.value,disabled:!e.value.experimentId,placeholder:e.value.experimentId?"Select a variant":"Select an experiment first","onUpdate:modelValue":t[0]||(t[0]=d=>e.value.variantId=d)},null,8,["model-value","options","disabled","placeholder"]),x("div",X,[p(r(H),{"model-value":e.value.isTester,size:"small",disabled:!e.value.experimentId,"tooltip-content":c.value,"disabled-tooltip":e.value.experimentId?void 0:"Select an experiment first","onUpdate:modelValue":t[1]||(t[1]=d=>e.value.isTester=d)},{default:u(()=>t[7]||(t[7]=[x("p",{class:"tw-font-bold"},"Mark as Tester",-1)]),void 0,!0),_:1,__:[7]},8,["model-value","disabled","tooltip-content","disabled-tooltip"]),p(r(K),null,{default:u(()=>t[8]||(t[8]=[o("As a tester, the player will be able to try out the experiment before it is enabled for everyone. This is a great way to test variants before rolling them out.",-1)]),void 0,!0),_:1,__:[8]})]),c.value?J("",!0):(v(),I(a,{key:0,message:"Enrolling a player to an experiment or modifying the variant will force the player to reconnect!"}))])):(v(),I(r(F),{key:0,title:"No Experiments Available"},{default:u(()=>[t[3]||(t[3]=o("There are no active experiments available in this environment. First, set them up in your game configs and then configure them from the ",-1)),p(r(U),{to:"/experiments"},{default:u(()=>t[2]||(t[2]=[o("experiments page",-1)]),void 0,!0),_:1,__:[2]}),t[4]||(t[4]=o(".",-1))],void 0,!0),_:1,__:[3,4]}))]),_:1},8,["trigger-button-disabled-tooltip","ok-button-disabled-tooltip"])}}});export{se as default};
