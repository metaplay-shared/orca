import{d as p,E as g,c as l,e as c,o as u,f as b,_ as v,w as y,k as S,t as h}from"./index-DAyiym1a.js";import{a as E}from"./players-CkgXyjra.js";const o={Preview:{sortOrder:1,displayString:"Preview",badgeVariant:"primary",tooltip:"The [TYPENAME] is in it's preview phase."},Tentative:{sortOrder:2,displayString:"Available",badgeVariant:"primary",tooltip:"The [TYPENAME] is available for [PLAYER] to activate."},Active:{sortOrder:3,displayString:"Active",badgeVariant:"success",tooltip:"The [TYPENAME] is active and visible to [PLAYER]."},EndingSoon:{sortOrder:4,displayString:"Ending Soon",badgeVariant:"success",tooltip:"The [TYPENAME] is active but will be ending soon."},Review:{sortOrder:5,displayString:"Review",badgeVariant:"primary",tooltip:"Not active any more, but still visible to [PLAYER]."},Inactive:{sortOrder:6,displayString:"Not Available",badgeVariant:"neutral",tooltip:"Not available or visible to [PLAYER]."},InCooldown:{sortOrder:7,displayString:"On Cooldown",badgeVariant:"neutral",tooltip:"On cooldown after previous active phase."},TotalLimitsReached:{sortOrder:8,displayString:"Limits Reached",badgeVariant:"neutral",tooltip:"Activation or consumption limits have been reached."},Ineligible:{sortOrder:9,displayString:"Ineligible",badgeVariant:"neutral",tooltip:"[PLAYER] does not fulfill the requirements."},NoSchedule:{sortOrder:10,displayString:"Dynamic",badgeVariant:"primary",tooltip:"Available depending on game state."},ServerError:{sortOrder:11,displayString:"Server Error",badgeVariant:"warning",tooltip:"The server failed to resolve the phase."},Disabled:{sortOrder:12,displayString:"Disabled",badgeVariant:"danger",tooltip:"The [TYPENAME] is disabled."}},s={Preview:{sortOrder:1,displayString:"In Preview",badgeVariant:"primary",tooltip:"Visible to players but not available yet."},Active:{sortOrder:2,displayString:"Available",badgeVariant:"success",tooltip:"Available and visible to players."},EndingSoon:{sortOrder:3,displayString:"Ending Soon",badgeVariant:"success",tooltip:"Available and visible to players, but ending soon."},Review:{sortOrder:4,displayString:"In Review",badgeVariant:"primary",tooltip:"Not available any more, but still visible to players."},Inactive:{sortOrder:5,displayString:"Not Available",badgeVariant:"neutral",tooltip:"Not available or visible to players."},NoSchedule:{sortOrder:6,displayString:"Dynamic",badgeVariant:"primary",tooltip:"Available depending on the players' game state."},ServerError:{sortOrder:7,displayString:"Server Error",badgeVariant:"warning",tooltip:"The server failed to resolve the phase."},Disabled:{sortOrder:8,displayString:"Disabled",badgeVariant:"danger",tooltip:"The [TYPENAME] is disabled."}};function n(a,e,t){const i=t?o:s;let r;if(e===null)if(a.config.activableParams.isEnabled)if(t)if("phase"in a)r=a.phase;else throw new Error("Error getting activable phaseInfo. Is the player data wrapped in a ref?");else r=a.scheduleStatus?.currentPhase.phase??"NoSchedule";else r="Disabled";else r=e;return i[r]}function N(a,e=!0){let i=Object.values(a?o:s).map(r=>r.displayString);return e&&(i=i.filter(r=>r!=="Server Error")),i}function T(a,e=null,t=null){return n(a,e,t).sortOrder||-1}function f(a,e=null,t=null){return n(a,e,t).displayString||`Error: ${e}`}function m(a,e=null,t=null,i=null){return(n(a,e,t).tooltip||`Error: ${e}`).replace(/\[PLAYER\]/g,t?.model?.playerName||"n/a").replace(/\[TYPENAME\]/g,i??"activable")}function A(a,e=null,t=null){return n(a,e,t).badgeVariant||"warning"}function I(a){return o[a].displayString}const Y=p({__name:"MetaActivablePhaseBadge",props:{activable:{},phase:{},playerId:{},typeName:{}},setup(a){const e=a,{data:t}=g(()=>e.playerId?E(e.playerId):void 0),i=l(()=>f(e.activable,e.phase,t.value)),r=l(()=>m(e.activable,e.phase,t.value,e.typeName)),d=l(()=>A(e.activable,e.phase,t.value));return(O,V)=>(u(),c(b(v),{tooltip:r.value,variant:d.value},{default:y(()=>[S(h(i.value),1)],void 0,!0),_:1},8,["tooltip","variant"]))}});export{Y as _,T as a,I as b,N as c,f as p};
