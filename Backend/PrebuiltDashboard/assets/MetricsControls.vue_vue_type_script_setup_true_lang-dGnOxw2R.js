import{d as Te,bz as Oe,af as Ce,c as T,h as I,i as Z,D as l,cn as Me,K as ee,a as x,o as b,j as w,m as V,e as Ve,q as O,w as M,t as $,f as s,k as _,z as g}from"./index-DAyiym1a.js";import{a as W,r as S,t as _e}from"./MetricCard.vue_vue_type_script_setup_true_lang-CFPMZe7V.js";import{_ as te}from"./MInputSingleSelectDropdown.vue_vue_type_script_setup_true_lang-BRIBVSuX.js";import{_ as ae}from"./MInputSingleSelectRadio.vue_vue_type_script_setup_true_lang-CGM7lb3s.js";import{_ as We}from"./MInputDuration.vue_vue_type_script_setup_true_lang-BgwwwskG.js";import{_ as oe,M as Ue}from"./MInputDateTime.vue_vue_type_script_setup_true_lang-BaxH1mqp.js";import{_ as U}from"./MInputHintMessage.vue_vue_type_script_setup_true_lang-B7AbTbVm.js";import{_ as ke}from"./MInputSingleSelectSwitch.vue_vue_type_script_setup_true_lang-dEvjQEX9.js";const ze={class:"tw-rounded-md tw-border tw-border-neutral-200 tw-bg-neutral-50 tw-p-3"},je={class:"tw-font-semibold"},Be={key:0,class:"tw-text-xs"},Ne={key:1,class:"tw-text-xs"},$e={key:0},Re={class:"tw-mt-2 tw-flex tw-justify-between"},Je={key:1,class:"tw-mt-2 tw-flex tw-justify-between"},Ee={class:"tw-mt-2 tw-flex tw-justify-between"},Ae={key:3,class:"tw-mt-4"},He={class:"tw-flex tw-items-center tw-justify-between"},Qe={key:0},Fe={key:1},Le={key:2},at=Te({__name:"MetricsControls",props:{metricId:{},metricsInfoData:{},metricData:{}},emits:["update:resolution","update:startTime","update:endTime","update:selectedCohort","update:cohortDate","update:timeWindowMode"],setup(ue,{expose:ie,emit:le}){const a=Oe(),E=Ce(),p=ue,f=le,A=T(()=>[{label:"Last 4 hours",value:"4h",disabled:W(p.metricId,p.metricsInfoData)?.dashboardInfo?.dailyOnly},{label:"Last 3 days",value:"3d",disabled:W(p.metricId,p.metricsInfoData)?.dashboardInfo?.dailyOnly},{label:"Last 60 days",value:"60d"},{label:"Custom",value:"custom"}]),H={"4h":"Minutely","3d":"Hourly","60d":"Daily",custom:void 0},Q=[{label:"By Date",value:"ByDate"},{label:"By Cohort",value:"ByCohort"},{label:"Averages",value:"Averages"}],re=T(()=>{const e=H[d.value];return Object.keys(S).map(t=>{const i=S[t];let h;return e?h=H[d.value]!==t:p.metricData?.dashboardInfo?.dailyOnly?h=t!=="Daily":h=o.value.toSeconds()-u.value.toSeconds()>i.maxWindowSizeSeconds,{label:i.label,value:t,disabled:h}})}),ne=T(()=>d.value==="custom"?"Some resolutions may be unavailable depending on the selected time range.":"Resolution is fixed for the selected time range.");async function se(e){if(!e)throw new Error("Start time cannot be undefined.");o.value.toSeconds()-e.toSeconds()>S.Daily.maxWindowSizeSeconds?u.value=l.fromSeconds(o.value.toSeconds()-S.Daily.maxWindowSizeSeconds):u.value=e,u.value=l.max(u.value,m.value),u.value=l.min(o.value.minus({minutes:1}),u.value),k(),await D(v.value,d.value,r.value,u.value,o.value)}async function de(e){if(!e)throw new Error("End time cannot be undefined.");e?.toSeconds()-u.value.toSeconds()>S.Daily.maxWindowSizeSeconds?o.value=l.fromSeconds(u.value.toSeconds()+S.Daily.maxWindowSizeSeconds):o.value=e,o.value=l.max(o.value,m.value),o.value=l.max(o.value,u.value.plus({minutes:1})),k(),await D(v.value,d.value,r.value,u.value,o.value)}async function ve(e){r.value=e,k(),await D(v.value,d.value,e,u.value,o.value)}function k(){if(p.metricData?.dashboardInfo?.dailyOnly){r.value="Daily";return}o.value.toSeconds()-u.value.toSeconds()>S[r.value].maxWindowSizeSeconds&&(r.value==="Minutely"&&o.value.toSeconds()-u.value.toSeconds()<S.Hourly.maxWindowSizeSeconds?r.value="Hourly":r.value="Daily")}async function me(e){const t=l.utc();switch(e){case"4h":u.value=l.max(l.fromSeconds(t.toSeconds()-4*3600),m.value),o.value=t,r.value="Minutely",c.value=g.fromObject({hours:4});break;case"3d":u.value=l.max(l.fromSeconds(t.toSeconds()-3*86400),m.value),o.value=t,r.value="Hourly",c.value=g.fromObject({days:3});break;case"60d":u.value=l.max(l.fromSeconds(t.toSeconds()-60*86400),m.value),o.value=t,r.value="Daily",c.value=g.fromObject({days:60});break}d.value=e,await D(v.value,e,r.value,u.value,o.value)}async function F(e){y.value=e,e!==void 0&&await L("ByCohort"),await D(v.value,d.value,r.value,u.value,o.value,c.value,q.value,y.value,n.value)}ie({selectCohort:F});async function ce(e){e&&(e=g.fromObject({days:Math.round(e.days),hours:Math.round(e.hours),minutes:Math.round(e.minutes)}),c.value=e,o.value=l.utc(),u.value=l.max(o.value.minus(e),m.value),k(),await D(v.value,d.value,r.value,u.value,o.value,c.value))}Z(()=>{const e=setInterval(()=>{v.value==="liveUpdate"&&(o.value=l.utc(),u.value=l.max(o.value.minus(c.value),m.value))},1e4);Me(()=>{clearInterval(e)})});async function fe(e){v.value=e,e==="fixedWindow"?d.value="custom":(d.value=Y(),c.value=X(),o.value=l.utc(),u.value=l.max(o.value.minus(c.value),m.value)),await D(e,d.value,r.value,u.value,o.value,c.value)}const R=T(()=>{if(!p.metricId)return[];const e=W(p.metricId,p.metricsInfoData);if(!e)return[];if(!e?.dashboardInfo?.isDailyCohorts)return[];const t=p.metricData;return t?t.cohorts===void 0?[]:Object.keys(t.cohorts[Object.keys(t.cohorts)[0]]).map(i=>({label:"D"+i,value:parseInt(i)})):[]});async function ye(e){n.value=e,await D(v.value,d.value,r.value,u.value,o.value,c.value,q.value,y.value,n.value)}async function L(e){const t=e;if(t!==q.value){if(q.value=t,t==="Averages")y.value=void 0,n.value=void 0;else if(t==="ByDate"){if(n.value===void 0&&(n.value=u.value.toISODate()??m.value.toISODate()??void 0,!n.value)){console.error("Cohort date is undefined.");return}y.value=void 0}else t==="ByCohort"&&(n.value=void 0,y.value===void 0&&R.value[0]&&(y.value=R.value[0].value));await D(v.value,d.value,r.value,u.value,o.value,c.value,q.value,y.value,n.value)}}function pe(){if(a.query.timeWindowMode){if(a.query.timeWindowMode==="liveUpdate"||a.query.timeWindowMode==="fixedWindow")return a.query.timeWindowMode;console.warn(`Invalid timeWindowMode query parameter: ${JSON.stringify(a.query.timeWindowMode)}.`)}return"liveUpdate"}const P=T(()=>{if(a.query.resolution){if(typeof a.query.resolution=="string"){const e=a.query.resolution;if(Object.keys(S).includes(e))return e}console.warn(`Invalid route query resolution parameter: ${JSON.stringify(a.query.resolution)}.`)}});function we(){return P.value?P.value:"Daily"}const J=T(()=>{if(a.query.timeWindowMode==="fixedWindow")return"custom";if(a.query.preset){if(typeof a.query.preset=="string"){const e=a.query.preset;if(A.value.map(t=>t.value).includes(e))return e}console.warn(`Invalid route query time preset parameter: ${JSON.stringify(a.query.preset)}.`)}});function Y(){return J.value?J.value:"60d"}async function D(e,t,i,h,z,C=c.value,j=void 0,B=void 0,N=void 0){e==="liveUpdate"?await E.replace({path:a.path,query:{...a.query,timeWindowMode:e,preset:t,resolution:i,start:void 0,end:void 0,duration:C.shiftTo("days","hours","minutes").toISO(),cohortViewType:j,selectedCohort:B?.toString(),cohortDate:N}}):await E.replace({path:a.path,query:{...a.query,timeWindowMode:e,preset:t,resolution:i,start:h.toUTC().toISO(),end:z.toUTC().toISO(),duration:void 0,cohortViewType:j,selectedCohort:B?.toString(),cohortDate:N}})}Z(async()=>{J.value||await D(v.value,d.value,r.value,u.value,o.value,c.value,q.value,y.value,n.value),f("update:timeWindowMode",v.value),f("update:resolution",r.value),f("update:startTime",u.value),f("update:endTime",o.value),f("update:selectedCohort",y.value),f("update:cohortDate",n.value)});const K=T(()=>{if(a.query.start){if(typeof a.query.start=="string"){const e=l.fromISO(a.query.start);if(e.isValid)return e}console.warn(`Invalid route query start parameter: ${JSON.stringify(a.query.start)}.`)}}),G=T(()=>{if(a.query.end){if(typeof a.query.end=="string"){const e=l.fromISO(a.query.end);if(e.isValid)return e}console.warn(`Invalid route query end parameter: ${JSON.stringify(a.query.end)}.`)}});function he(){return a.query.timeWindowMode==="liveUpdate"&&a.query.duration?l.utc().minus(g.fromISO(a.query.duration)):K.value?K.value:l.utc().minus(S[r.value].windowSizeSeconds*1e3)}function Se(){return a.query.timeWindowMode==="liveUpdate"&&a.query.duration?l.utc().toUTC():G.value?G.value:l.utc()}function X(){if(a.query.preset==="custom"&&a.query.duration){let e=g.fromISO(a.query.duration,{conversionAccuracy:"longterm"});if(e.isValid)return e=e.shiftTo("days","hours","minutes").normalize(),e;console.warn(`Invalid duration query parameter: ${JSON.stringify(a.query.duration)}.`)}if(o.value&&u.value){let e=g.fromMillis(o.value.toMillis()-u.value.toMillis());return e=g.fromObject({minutes:Math.round(e.as("minutes"))}),e=e.shiftTo("days","hours","minutes").normalize(),e}else return g.fromObject({hours:4})}function De(){if(a.query.cohortViewType==="ByCohort"&&a.query.selectedCohort){if(typeof a.query.selectedCohort=="string"){const e=parseInt(a.query.selectedCohort);if(!isNaN(e))return e}console.warn(`Invalid selectedCohort query parameter: ${JSON.stringify(a.query.selectedCohort)}.`)}}function Ie(){if(a.query.cohortViewType){if(typeof a.query.cohortViewType=="string"){const e=a.query.cohortViewType;if(Q.map(t=>t.value).includes(e))return e}console.warn(`Invalid cohortViewType query parameter: ${JSON.stringify(a.query.cohortViewType)}.`)}if(W(p.metricId,p.metricsInfoData)?.dashboardInfo?.isDailyCohorts)return"Averages"}function be(){if(a.query.cohortViewType==="ByDate"&&a.query.cohortDate){if(typeof a.query.cohortDate=="string"){const e=a.query.cohortDate;if(l.fromISO(e).isValid)return e}console.warn(`Invalid cohortDate query parameter: ${JSON.stringify(a.query.cohortDate)}.`)}}const m=I(l.fromSeconds(0)),d=I(Y()),r=I(we()),o=I(Se()),u=I(he()),v=I(pe()),c=I(X()),y=I(De()),q=I(Ie()),n=I(be());return ee([v,r,u,o,y,n],([e,t,i,h,z,C],[j,B,N,qe,xe,ge])=>{e!==j&&f("update:timeWindowMode",e),t!==B&&f("update:resolution",t),i!==N&&(f("update:startTime",i),n.value&&n.value<(i.toISODate()??"")&&(n.value=i.toISODate()??"",f("update:cohortDate",C))),h!==qe&&(f("update:endTime",h),n.value&&n.value>(h.toISODate()??"")&&(n.value=h.toISODate()??"",f("update:cohortDate",C))),z!==xe&&f("update:selectedCohort",z),C!==ge&&f("update:cohortDate",C)}),ee(()=>p.metricsInfoData,e=>{e&&(m.value=l.fromISO(e.epochTime),u.value=l.max(m.value,u.value),o.value=l.max(m.value,o.value))},{immediate:!0}),(e,t)=>(b(),x("div",ze,[w(s(te),{options:s(_e),label:"Time Window","model-value":v.value,"onUpdate:modelValue":fe,"data-testid":"metrics-time-window-dropdown"},{option:M(({option:i})=>[O("div",je,$(i.label),1),i.value==="liveUpdate"?(b(),x("div",Be,"Show live data that updates every 10 seconds. You can change the duration to control how much data is shown.")):i.value==="fixedWindow"?(b(),x("div",Ne,"Show data from a fixed time window. You can change the start and end times to view a different time window.")):V("",!0)]),_:1},8,["options","model-value"]),v.value==="liveUpdate"?(b(),x("div",$e,[O("div",Re,[t[8]||(t[8]=O("div",{class:"tw-block tw-text-sm tw-font-bold"},"Duration",-1)),w(s(ae),{"model-value":d.value,options:A.value,size:"small","onUpdate:modelValue":t[0]||(t[0]=i=>me(i))},null,8,["model-value","options"])]),w(s(We),{class:"tw-mt-2","model-value":c.value,disabled:d.value!=="custom","max-duration":s(S)[r.value].maxWindowSizeSeconds,"onUpdate:modelValue":t[1]||(t[1]=i=>ce(i))},null,8,["model-value","disabled","max-duration"])])):V("",!0),v.value==="fixedWindow"?(b(),x("div",Je,[w(s(oe),{"model-value":u.value,label:"Start Time (UTC)","max-date-time":o.value,"min-date-time":m.value,"onUpdate:modelValue":t[2]||(t[2]=i=>se(i))},null,8,["model-value","max-date-time","min-date-time"]),w(s(oe),{"model-value":o.value,label:"End Time (UTC)","max-date-time":s(l).now(),"min-date-time":s(l).max(m.value,u.value.plus({minutes:1})),"onUpdate:modelValue":t[3]||(t[3]=i=>de(i))},null,8,["model-value","max-date-time","min-date-time"])])):V("",!0),m.value===u.value?(b(),Ve(s(U),{key:2,variant:"warning"},{default:M(()=>t[9]||(t[9]=[_("Start time has been adjusted to the epoch time of the metrics data.",-1)]),void 0,!0),_:1,__:[9]})):V("",!0),O("div",Ee,[t[10]||(t[10]=O("div",{class:"tw-text-sm tw-font-bold"},"Resolution",-1)),w(s(ae),{"model-value":r.value,options:re.value,size:"small","onUpdate:modelValue":t[4]||(t[4]=i=>ve(i))},null,8,["model-value","options"])]),w(s(U),null,{default:M(()=>[_($(ne.value),1)],void 0,!0),_:1}),e.metricId&&s(W)(e.metricId,e.metricsInfoData)?.dashboardInfo?.isDailyCohorts?(b(),x("div",Ae,[t[13]||(t[13]=O("div",{class:"tw-mb-2 tw-border-b tw-border-neutral-200"},null,-1)),O("div",He,[t[11]||(t[11]=O("p",{class:"tw-text-sm tw-font-bold"},"Daily Cohort View",-1)),w(s(ke),{"model-value":q.value??"Averages",options:Q,"onUpdate:modelValue":t[5]||(t[5]=i=>L(i))},null,8,["model-value"])]),q.value==="ByDate"?(b(),x("div",Qe,[w(s(Ue),{"model-value":n.value??u.value.toISODate()??"","max-iso-date":o.value.toISODate()??"","min-iso-date":u.value.toISODate()??"",label:"Cohort Start Date",size:"small","onUpdate:modelValue":t[6]||(t[6]=i=>ye(i))},null,8,["model-value","max-iso-date","min-iso-date"]),w(s(U),{class:"tw-mt-3"},{default:M(()=>[_("Showing cohort data starting from "+$(n.value??"")+".",1)],void 0,!0),_:1})])):q.value==="ByCohort"?(b(),x("div",Fe,[w(s(te),{"model-value":y.value,options:R.value,label:"Selected Cohort",size:"small","onUpdate:modelValue":t[7]||(t[7]=i=>F(i))},null,8,["model-value","options"]),w(s(U),{class:"tw-mt-3"},{default:M(()=>[_("Showing cohort data for "+$(y.value!==void 0?"D"+y.value:"")+".",1)],void 0,!0),_:1})])):(b(),x("div",Le,[w(s(U),null,{default:M(()=>t[12]||(t[12]=[_("Showing averages of daily cohorts.",-1)]),void 0,!0),_:1,__:[12]})]))])):V("",!0)]))}});export{at as _};
