import{d as ht,E as bt,c as P,bv as Nt,ad as T,cK as yt,h as p,K as It,bs as z,bH as K,r as w,e as N,o as r,w as e,j as i,q as u,f as a,x as L,I as kt,a as c,t as s,ae as A,k as d,U as Tt,m as F,a6 as Ft,bl as zt,v as Ct,F as Mt,b as $t,_ as G,bt as xt}from"./index-DAyiym1a.js";import{b as Ut,c as R}from"./metaListUtils-B-xQ0HnD.js";import{_ as St}from"./AuditLogCard.vue_vue_type_script_setup_true_lang-Cl-KVQes.js";import{_ as J}from"./MetaGeneratedForm.vue_vue_type_script_setup_true_lang-DdaVgxEJ.js";import{a as Vt}from"./web3-COzKeKlE.js";import{d as Pt}from"./debounce-CRuraxcR.js";import{_ as Lt}from"./MRawDataCard.vue_vue_type_script_setup_true_lang-Q1r46_CP.js";import{_ as At,a as Dt}from"./MViewContainer.vue_vue_type_script_setup_true_lang-DP4T6epC.js";import{_ as D}from"./MActionModalButton.vue_vue_type_script_setup_true_lang-CRnsCPt_.js";import{_ as Ot}from"./MInputTextArea.vue_vue_type_script_setup_true_lang-Dxjs9C9J.js";import{_ as Bt}from"./MInputSingleFileContents.vue_vue_type_script_setup_true_lang-CGbk44sq.js";import{_ as Et}from"./MInputCheckbox.vue_vue_type_script_setup_true_lang-CmGaUCkv.js";import"./MetaEventStreamCard-BshWTCEs.js";import"./timeUtils-_Yn_3RE3.js";import"./MInputSingleSelectSwitch.vue_vue_type_script_setup_true_lang-dEvjQEX9.js";import"./index-TQG-La0y.js";import"./MInputHintMessage.vue_vue_type_script_setup_true_lang-B7AbTbVm.js";import"./MInputSingleSelectDropdown.vue_vue_type_script_setup_true_lang-BRIBVSuX.js";import"./MInputText.vue_vue_type_script_setup_true_lang-B9sf9LSD.js";import"./MInputMultiSelectCheckbox.vue_vue_type_script_setup_true_lang-D6xsoOzq.js";import"./auditLogs-kSP2tqNv.js";import"./GeneratedUiFormDynamicComponent.vue_vue_type_script_setup_true_lang-BiTvhFwY.js";import"./isSymbol-BXvDeGRF.js";import"./MActionModal.vue_vue_type_script_setup_true_lang-XDUxofmt.js";import"./index-CVSO09yM.js";import"./MInputSingleFile-DNpEs77W.js";const Wt={class:"font-weight-bold tw-mb-1"},Rt={class:"font-weight-bold tw-mb-1"},qt={key:0,class:"tw-w-full tw-text-center"},jt={class:"text-muted"},Yt={key:1,class:"tw-w-full tw-text-center"},Ht={class:"text-muted"},Kt={key:2},Gt={class:"tw-flex tw-flex-wrap tw-justify-end tw-gap-1"},Jt={class:"tw-flex tw-flex-col tw-gap-y-2"},Qt={key:3},Xt={key:0},Zt={key:0},te={key:1,class:"tw-italic"},ee={class:"small text-muted tw-ml-1"},ae={key:0},ie={key:1,class:"tw-italic"},oe={class:"small text-muted ml-2"},ne={key:0},le={key:1},se={key:2,class:"tw-italic"},re={class:"small text-muted tw-ml-1"},de={key:0},ue={key:1,class:"tw-italic"},ce={key:0},fe={key:1},q=5,Oe=ht({__name:"Web3NftCollectionDetailView",props:{collectionId:{}},setup(Q){const y=Q,{data:l,error:X,refresh:C}=bt(Vt(y.collectionId)),Z=P(()=>l.value?.nfts),tt=P(()=>l.value?.uninitializedNfts);Nt().setDynamicTitle(l,o=>`Manage ${o.value.collectionId??"Collection"}`);const et=P(()=>{const o=[];l.value?.configWarning?.length>0&&o.push({title:l.value.configWarning.title,message:l.value.configWarning.message});const t=at();if(t!==0&&o.push({title:"Metadata write operation in progress",message:`The metadata files of ${T(t,"NFT",!0)} in this collection are currently being written in the background. If new NFTs were just initialized, you should wait for this operation to complete before minting the NFTs.`}),yt(l.value))for(const m of l.value.ongoingMetadataDownloads){const f=m.firstTokenId,b=m.lastTokenId,U=m.numDownloaded,S=m.numTotal;o.push({key:m.taskId,title:"Metadata download in progress",message:`The server is currently downloading the metadata of tokens ${f} to ${b}. When the download is finished, the NFTs will get initialized in the server. Progress: ${U}/${S}.`})}return o});function at(){if(!l.value)return 0;let o=0;for(const t of l.value.nfts)t.hasPendingMetadataWrite===!0&&(o+=1);return o}const I=p({}),j=p(!1),{showSuccessNotification:M,showErrorNotification:it}=xt();async function ot(){let o=I.value.tokenId;(o===""||o===null||o===void 0)&&(o="automaticTokenId"),await z().post(`nft/${y.collectionId}/${o}/initialize`,I.value),M("New NFT initialized!"),C(),I.value={}}const g=p(""),_=p(),v=p(),$=p(!1),h=p(),k=p(!1),nt=P(()=>O()!=null&&!h.value&&!v.value?null:!!v.value);function lt(o){g.value=o,dt()}function st(o){k.value=o,B()}It(_,B);function O(){return g.value.length>0?g.value:_.value?_.value:null}function rt(){g.value="",_.value=void 0,v.value=null,$.value=!1,h.value=void 0,k.value=!1}async function B(){const o=O();if(o!==null){$.value=!0,h.value=void 0,v.value=null;try{const t=await z().post(`nft/${y.collectionId}/batchInitialize`,{csv:o,allowOverwrite:k.value,validateOnly:!0});t.data.isSuccess?(h.value=void 0,v.value={nfts:t.data.nfts,numNftsOverwritten:t.data.numNftsOverwritten}):(h.value=new K("Validation Error",t.data.error.message,void 0,void 0,[{title:"Details",content:t.data.error.details}]),v.value=null)}catch(t){const m=t.response.data.error;h.value=new K("Validation Error",m.message,void 0,void 0,[{title:"Details",content:m.details}]),v.value=null}finally{$.value=!1}}}const dt=Pt(B,500);async function ut(){const o=O(),t=await z().post(`nft/${y.collectionId}/batchInitialize`,{csv:o,allowOverwrite:k.value});t.data.isSuccess?(M(`Batch of ${T(t.data.nfts.length,"NFT",!0)} initialized!`),C()):it(t.data.error.message+" "+t.data.error.details)}const x=p({}),Y=p(!1);async function ct(){const o=await z().post(`nft/${y.collectionId}/batchInitializeFromMetadata`,x.value);M(`Batch of ${T(o.data.nfts.length,"NFT",!0)} initialized based on existing metadata!`),C()}function ft(){x.value={}}async function vt(){await z().post(`nft/${y.collectionId}/refresh`,I.value),M("Ledger metadata refreshed!"),C()}const mt=["name","description","tokenId","owner","ownerAddress","typeName"],pt=["tokenId","owner","ownerAddress"],gt=[new Ut("status",[new R("Player-owned",o=>o.owner!=="None"),new R("Non-player-owned",o=>o.owner==="None"&&o.isMinted),new R("Not minted",o=>!o.isMinted)])];function E(o){return o.owner!=="None"?"Player-owned":o.ownerAddress!=="None"?"Non-player-owned":"Not minted"}function _t(o){return o==="Authoritative"?"NFT metadata is written by this game.":o==="Foreign"?"NFT metadata is written externally, and this game only reads the metadata.":void 0}return(o,t)=>{const m=w("fa-icon"),f=w("b-td"),b=w("b-tr"),U=w("b-tbody"),S=w("b-table-simple"),wt=w("b-spinner"),V=w("b-row"),H=w("meta-list-card"),W=w("b-col");return r(),N(a(Dt),{variant:a(l)?.configWarning?"warning":void 0,"is-loading":!a(l),error:a(X),alerts:et.value},{overview:e(()=>[i(a(At),{id:a(l).collectionId,title:a(l)?.ledgerInfo?.name??"Name unknown",subtitle:a(l)?.ledgerInfo?.description,avatar:a(l)?.ledgerInfo?.iconUrl,"data-testid":"nft-collection-overview-card"},{buttons:e(()=>[u("div",Gt,[i(a(D),{"modal-title":"Initialize a New NFT",action:ot,"trigger-button-label":"Init single NFT","ok-button-label":"Initialize","ok-button-disabled-tooltip":j.value?void 0:"Missing required fields.",permission:"api.nft.initialize","data-testid":"initialize-nft"},{default:e(()=>[t[13]||(t[13]=u("p",null,"To mint a new NFT, its metadata need to be first initialized on the game server.",-1)),i(J,{modelValue:I.value,"onUpdate:modelValue":t[0]||(t[0]=n=>I.value=n),typeName:"Metaplay.Server.AdminApi.Controllers.NftController.NftInitializationParams",onStatus:t[1]||(t[1]=n=>j.value=n)},null,8,["modelValue"])],void 0,!0),_:1,__:[13]},8,["ok-button-disabled-tooltip"]),i(a(D),{"modal-title":"Batch Initialize new NFTs",action:ut,"trigger-button-label":"Init NFTs from CSV","ok-button-label":"Batch Initialize",onShow:rt,"data-testid":"batch-initialize-nfts"},{default:e(()=>[t[16]||(t[16]=u("h6",null,"Upload NFT Data",-1)),t[17]||(t[17]=u("p",null,"You can upload a list of NFTs in a CSV format to initialize them all in one go.",-1)),u("div",Jt,[i(a(Ot),{label:"Paste in a CSV string...","model-value":g.value,placeholder:_.value!=null?"File upload selected":a(l).batchInitPlaceholderText,variant:g.value!==""?g.value?"success":"danger":"default",rows:5,disabled:_.value!=null,"onUpdate:modelValue":lt,"data-testid":"entity-archive-text"},null,8,["model-value","placeholder","variant","disabled"]),i(a(Bt),{label:"...or upload as a file","model-value":_.value,placeholder:g.value?"Manual paste selected":"Choose or drop a CSV file",variant:_.value?nt.value?"success":"danger":"default",disabled:g.value!=="","accepted-file-types":".csv","onUpdate:modelValue":t[2]||(t[2]=n=>_.value=n)},null,8,["model-value","placeholder","variant","disabled"]),i(a(Et),{"model-value":k.value,name:"allowBatchInitializationOverwrite","onUpdate:modelValue":st},{default:e(()=>[t[15]||(t[15]=d("Allow Overwrite",-1)),i(a(G),{class:"tw-ml-1",tooltip:"If overwriting is allowed, NFTs from this batch will overwrite the state of any existing NFTs with the same ids. Use with caution!",shape:"pill"},{default:e(()=>t[14]||(t[14]=[d("?",-1)]),void 0,!0),_:1,__:[14]})],void 0,!0),_:1,__:[15]},8,["model-value"])])]),"right-panel":e(()=>[t[19]||(t[19]=u("h6",null,"Preview Incoming Data",-1)),v.value?F("",!0):(r(),N(a(Ft),{key:0,variant:"neutral",title:"No Data to Preview"},{default:e(()=>t[18]||(t[18]=[d("Paste in a valid list of NFTs compatible with the game server's version to see a preview of the import results.",-1)]),void 0,!0),_:1,__:[18]})),$.value?(r(),N(wt,{key:1})):F("",!0),h.value?(r(),N(a(zt),{key:2,error:h.value},null,8,["error"])):F("",!0),v.value?(r(),c("div",Qt,[u("div",null,s(a(T)(v.value.nfts.length,"NFT",!0))+" will be initialized.",1),k.value?(r(),c("div",Xt,s(a(T)(v.value.numNftsOverwritten,"existing NFT",!0))+" will be overwritten.",1)):F("",!0),i(a(Ct),{class:"tw-mt-2","show-border":""},{default:e(()=>[(r(!0),c(Mt,null,$t(v.value.nfts.slice(0,q),n=>(r(),N(a(L),{key:n.tokenId,avatarUrl:n.imageUrl},{"top-right":e(()=>[i(a(G),{variant:E(n)==="Minted"?"success":void 0},{default:e(()=>[d(s(E(n)),1)],void 0,!0),_:2},1032,["variant"])]),"bottom-left":e(()=>[n.description?(r(),c("div",ae,s(n.description),1)):(r(),c("span",ie,"No description."))]),default:e(()=>[n.name?(r(),c("span",Zt,s(n.name),1)):(r(),c("span",te,"Unnamed "+s(n.typeName),1)),u("span",ee,s(o.collectionId)+"/"+s(n.tokenId),1)],void 0,!0),_:2},1032,["avatarUrl"]))),128)),v.value.nfts.length>q?(r(),N(a(L),{key:"nfts-omitted-dummy"},{default:e(()=>[u("span",oe,"... and "+s(a(T)(v.value.nfts.length-q,"more NFT",!0))+" omitted from this preview.",1)],void 0,!0),_:1})):F("",!0)],void 0,!0),_:1})])):F("",!0)]),_:1}),i(a(D),{"modal-title":"Initialize NFTs from existing metadata",action:ct,"trigger-button-label":"Init NFTs from metadata","ok-button-label":"Initialize","ok-button-disabled-tooltip":Y.value?void 0:"Missing required fields.",permission:"api.nft.initialize",onShow:ft,"data-testid":"batch-initialize-nfts-from-metadata"},{default:e(()=>[t[20]||(t[20]=u("p",null,"You can initialize a batch of NFTs (with sequential ids) based on existing metadata publicly served at the NFTs' metadata URLs.",-1)),i(J,{modelValue:x.value,"onUpdate:modelValue":t[3]||(t[3]=n=>x.value=n),typeName:"Metaplay.Server.AdminApi.Controllers.NftController.NftBatchInitializationFromMetadataParams",onStatus:t[4]||(t[4]=n=>Y.value=n)},null,8,["modelValue"])],void 0,!0),_:1,__:[20]},8,["ok-button-disabled-tooltip"]),i(a(D),{"modal-title":"Refresh NFT Collection Metadata",action:vt,"trigger-button-label":"Refresh metadata","trigger-button-disabled-tooltip":a(l).hasLedger?void 0:`${a(l).ledger} mode has no ledger to refresh from.`,permission:"api.nft.refresh_from_ledger","data-testid":"refresh-nft-collection"},{default:e(()=>[u("p",null,"You can immediately trigger a refresh of the collection's ledger metadata from "+s(a(l).ledgerName)+".",1),t[21]||(t[21]=u("div",{class:"text-muted small"},"This happens automatically in the background, so manual refreshing is not needed in daily operations.",-1))],void 0,!0),_:1,__:[21]},8,["trigger-button-disabled-tooltip"])])]),default:e(()=>[u("div",Wt,[i(m,{icon:"chart-bar"}),t[5]||(t[5]=d(" Overview",-1))]),i(S,{small:"",responsive:""},{default:e(()=>[i(U,null,{default:e(()=>[i(b,null,{default:e(()=>[i(f,null,{default:e(()=>t[6]||(t[6]=[d("Ledger",-1)]),void 0,!0),_:1,__:[6]}),i(f,{class:"text-right"},{default:e(()=>[d(s(a(l).ledger),1)],void 0,!0),_:1})],void 0,!0),_:1}),i(b,null,{default:e(()=>[i(f,null,{default:e(()=>t[7]||(t[7]=[d("Contract Address",-1)]),void 0,!0),_:1,__:[7]}),a(l).hasLedger?(r(),N(f,{key:0,class:"text-right",style:{"word-break":"break-all"}},{default:e(()=>[d(s(a(l).contractAddress),1)],void 0,!0),_:1})):(r(),N(f,{key:1,class:"text-right text-muted"},{default:e(()=>[d(s(a(l).ledger)+" mode has no contracts",1)],void 0,!0),_:1}))],void 0,!0),_:1}),i(b,null,{default:e(()=>[i(f,null,{default:e(()=>t[8]||(t[8]=[d("Metadata API URL",-1)]),void 0,!0),_:1,__:[8]}),i(f,{class:"text-right"},{default:e(()=>[d(s(a(l).metadataApiUrl),1)],void 0,!0),_:1})],void 0,!0),_:1}),i(b,null,{default:e(()=>[i(f,null,{default:e(()=>t[9]||(t[9]=[d("Metadata Management",-1)]),void 0,!0),_:1,__:[9]}),i(f,{class:"text-right"},{default:e(()=>[i(a(Tt),{content:_t(a(l).metadataManagementMode)},{default:e(()=>[d(s(a(l).metadataManagementMode),1)],void 0,!0),_:1},8,["content"])],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1}),u("div",Rt,[i(m,{icon:"cubes"}),t[10]||(t[10]=d(" Ledger Metadata",-1))]),a(l).hasLedger?a(l).ledgerInfo?(r(),c("div",Kt,[i(S,{small:"",responsive:""},{default:e(()=>[i(U,null,{default:e(()=>[i(b,null,{default:e(()=>[i(f,null,{default:e(()=>t[11]||(t[11]=[d("Icon URL",-1)]),void 0,!0),_:1,__:[11]}),i(f,{class:"tw-text-right"},{default:e(()=>[i(a(A),{to:a(l).ledgerInfo.iconUrl},{default:e(()=>[d(s(a(l).ledgerInfo.iconUrl),1)],void 0,!0),_:1},8,["to"])],void 0,!0),_:1})],void 0,!0),_:1}),i(b,null,{default:e(()=>[i(f,null,{default:e(()=>t[12]||(t[12]=[d("Image URL",-1)]),void 0,!0),_:1,__:[12]}),i(f,{class:"tw-text-right"},{default:e(()=>[i(a(A),{to:a(l).ledgerInfo.collectionImageUrl},{default:e(()=>[d(s(a(l).ledgerInfo.collectionImageUrl),1)],void 0,!0),_:1},8,["to"])],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1})])):(r(),c("div",Yt,[u("p",Ht,"Collection not configured in "+s(a(l).ledgerName)+".",1)])):(r(),c("div",qt,[u("p",jt,s(a(l).ledger)+" mode has no associated ledger.",1)]))],void 0,!0),_:1},8,["id","title","subtitle","avatar"])]),default:e(()=>[i(V,{class:"mb-2 tw-mt-4","no-gutters":"","align-v":"center"},{default:e(()=>t[22]||(t[22]=[u("h3",null,"Collection Data",-1)]),void 0,!0),_:1,__:[22]}),i(V,{"align-h":"center"},{default:e(()=>[i(W,{class:"tw-mb-4",lg:"6"},{default:e(()=>[i(H,{class:"h-100",itemList:Z.value,searchFields:mt,filterSets:gt,title:"NFTs",emptyMessage:"No NFTs in this collection","data-testid":"nft-collection-nft-list"},{"item-card":e(({item:n})=>[i(a(L),{avatarUrl:n.imageUrl},kt({"bottom-right":e(()=>[i(a(A),{to:`/web3/nft/${o.collectionId}/${n.tokenId}`,permission:"api.nft.view","data-testid":"view-nft"},{default:e(()=>t[23]||(t[23]=[d("View NFT",-1)]),void 0,!0),_:2,__:[23]},1032,["to"])]),default:e(()=>[n.queryError!==null?(r(),c("span",ne,"🛑 Failed to load!")):n.name?(r(),c("span",le,s(n.name),1)):(r(),c("span",se,"Unnamed "+s(n.typeName),1)),u("span",re,s(o.collectionId)+"/"+s(n.tokenId),1)],void 0,!0),_:2},[n.queryError===null?{name:"top-right",fn:e(()=>[d(s(E(n)),1)]),key:"0"}:void 0,n.queryError===null?{name:"bottom-left",fn:e(()=>[n.description?(r(),c("div",de,s(n.description),1)):(r(),c("span",ue,"No description."))]),key:"1"}:void 0]),1032,["avatarUrl"])]),_:1},8,["itemList"])],void 0,!0),_:1}),i(W,{class:"tw-mb-4",lg:"6"},{default:e(()=>[i(H,{class:"h-100",itemList:tt.value,searchFields:pt,title:"Recent orphan NFTs",emptyMessage:"No orphan NFTs encountered for this collection.",description:`The most recently-encountered NFTs that have been minted in ${a(l).ledgerName} but haven't been initialized in the game. Ideally, this should never happen in production.`,dangerous:"","data-testid":"nft-collection-uninitialized-nfts-card"},{"item-card":e(({item:n})=>[i(a(L),null,{"top-right":e(()=>[n.owner==="None"?(r(),c("span",ce,"No owning player")):(r(),c("span",fe,[t[24]||(t[24]=d("Owning player: ",-1)),i(a(A),{to:`/players/${n.owner}`,permission:"api.players.view"},{default:e(()=>[d(s(n.owner),1)],void 0,!0),_:2},1032,["to"])]))]),"bottom-left":e(()=>[d("Owner: "+s(n.ownerAddress),1)]),default:e(()=>[d(s(o.collectionId)+"/"+s(n.tokenId),1)],void 0,!0),_:2},1024)]),_:1},8,["itemList","description"])],void 0,!0),_:1})],void 0,!0),_:1}),i(V,{class:"mb-2 tw-mt-4","no-gutters":"","align-v":"center"},{default:e(()=>t[25]||(t[25]=[u("h3",null,"Admin",-1)]),void 0,!0),_:1,__:[25]}),i(V,{"align-h":"center"},{default:e(()=>[i(W,{class:"tw-mb-4",lg:"6"},{default:e(()=>[i(St,{class:"h-100",targetType:"$NftCollection",targetId:o.collectionId,"data-testid":"nft-collection-audit-log-card"},null,8,["targetId"])],void 0,!0),_:1})],void 0,!0),_:1}),i(a(Lt),{data:a(l),label:"singleNftCollectionData"},null,8,["data"])],void 0,!0),_:1},8,["variant","is-loading","error","alerts"])}}});export{Oe as default};
