import{d as D,c as _,a as h,o as n,q as l,m as c,bj as Y,Q as T,t as f,bz as j,c5 as z,E as F,bH as R,r as v,e as i,w as s,j as r,f as e,k as o,_ as p,ae as q,e2 as G,a6 as P,bs as H,bt as Q}from"./index-DAyiym1a.js";import{_ as U}from"./LeagueProgressCard.vue_vue_type_script_setup_true_lang-IKIKjlBO.js";import{C as J}from"./CoreUiPlacement-Q0Nbc6Vr.js";import{g as C}from"./leagueUtils-BqF6ffxm.js";import{a as K}from"./leagues-B22oLAaC.js";import{_ as W}from"./MRawDataCard.vue_vue_type_script_setup_true_lang-Q1r46_CP.js";import{_ as X,a as Z}from"./MViewContainer.vue_vue_type_script_setup_true_lang-DP4T6epC.js";import{_ as N}from"./MActionModalButton.vue_vue_type_script_setup_true_lang-CRnsCPt_.js";import"./progress-Y_EDtVsD.js";import"./MActionModal.vue_vue_type_script_setup_true_lang-XDUxofmt.js";import"./index-CVSO09yM.js";const ee={class:"tw-relative tw-flex tw-h-5 tw-w-full tw-items-center tw-justify-center tw-rounded-full tw-bg-neutral-200"},te=D({__name:"MProgressBar",props:{value:{},min:{default:0},max:{default:1},hidePercentageValue:{type:Boolean,default:!1},variant:{default:"primary"}},setup(E){const S=E,d=_(()=>{const g={primary:"tw-bg-blue-500",success:"tw-bg-green-500",warning:"tw-bg-orange-500",danger:"tw-bg-red-500",neutral:"tw-bg-neutral-400"};return g[S.variant]||g.primary}),a=_(()=>{const{value:g,min:b,max:w}=S;return(g-b)/(w-b)*100}),x=_(()=>a.value>54?"tw-text-white":"tw-text-black");return(g,b)=>(n(),h("div",ee,[l("div",{class:T(["tw-absolute tw-top-0 tw-left-0 tw-h-full tw-rounded-full",d.value]),style:Y({width:`${a.value}%`})},null,6),g.hidePercentageValue?c("",!0):(n(),h("span",{key:0,class:T(["tw-text-xs tw-z-10",x.value])},f(Math.floor(a.value))+"%",3))]))}}),ae={class:"font-weight-bold tw-mb-1"},se={"data-testid":"latest-season-link"},re={key:1,class:"text-right text-muted tw-italic"},oe={class:"small mt-2 tw-text-center tw-italic"},ne={key:0},ie={class:"tw-font-semibold"},we=D({__name:"LeagueDetailView",setup(E){const S=j(),d=z(S.params.leagueId),{data:a,error:x,refresh:g}=F(K(d)),b=H(),w=_(()=>a.value?.currentOrNextSeasonSchedule?.currentPhase.phase),$=_(()=>{if(a.value?.migrationProgress.error)return new R("Season migration error","Something went wrong during the season migration process. Contact your game team for assistance.",void 0,void 0,[{title:"Internal Error",content:a.value?.migrationProgress.error}])}),I=_(()=>{const m=[];return a.value?.enabled===!1&&m.push({title:"Disabled League",message:"You are currently viewing a disabled league and there are no active seasons. Set up the leagues feature in your runtime options.",variant:"danger"}),a.value?.state.currentSeason?.endedEarly===!0&&m.push({title:"Latest Season Ended Early",message:"The latest season was forced to end before its configured schedule.",variant:"warning"}),a.value?.state.currentSeason?.startedEarly===!0&&m.push({title:"Current Season Started Early",message:"The current season was forced to start before its configured schedule.",variant:"warning"}),m}),{showSuccessNotification:L,showErrorNotification:V}=Q();async function k(m){const t=await b.post(`/leagues/${d}/advance`,{isSeasonEnd:m});t.data.success?L(m?"Current season successfully ended early!":"Current season successfully advanced!"):V(t.data.errorMessage),g()}return(m,t)=>{const A=v("fa-icon"),u=v("b-td"),y=v("b-tr"),B=v("b-tbody"),M=v("b-table-simple"),O=v("meta-no-seatbelts");return n(),i(e(Z),{"is-loading":!e(a),error:e(x),alerts:I.value,permission:"api.leagues.view"},{overview:s(()=>[r(e(X),{id:e(d),title:e(a).details.leagueDisplayName,error:$.value,"data-testid":"league-detail-overview-card"},{alerts:s(()=>[e(a).migrationProgress.isInProgress?(n(),i(e(P),{key:0,class:"tw-mb-3",title:"Season Migration in Progress",variant:"neutral"},{default:s(()=>[t[8]||(t[8]=l("div",{class:"tw-text-xs+"},"Players will be able to join this season once the migrations are complete.",-1)),r(e(te),{value:e(a).migrationProgress.progressEstimate,max:1},null,8,["value"]),l("div",oe,f(e(a).migrationProgress.phase)+"...",1)],void 0,!0),_:1,__:[8]})):c("",!0),e(a).enabled&&e(a).schedule?(n(),i(U,{key:1,leagueId:e(d)},null,8,["leagueId"])):(n(),i(e(P),{key:2,title:"No Schedule",variant:"warning"},{default:s(()=>t[9]||(t[9]=[o("No schedule defined for this league.",-1)]),void 0,!0),_:1,__:[9]}))]),buttons:s(()=>[$.value?c("",!0):(n(),h("div",ne,[w.value==="Active"||w.value==="EndingSoon"?(n(),i(e(N),{key:0,"modal-title":"Force Season to End",action:()=>k(!0),"trigger-button-label":"End Season Now",variant:"danger",permission:"api.leagues.phase_debug","data-testid":"force-end-season"},{default:s(()=>[l("p",null,[t[10]||(t[10]=o("You can force ",-1)),l("span",ie,"season "+f(e(a)?.state.currentSeason.seasonId),1),t[11]||(t[11]=o(" to end immediately.",-1))]),t[12]||(t[12]=l("p",null,"The next season will start automatically according to the configured schedule.",-1)),t[13]||(t[13]=l("p",{class:"tw-text-xs+ tw-text-neutral-500"},"Performance note: ending a season early will cause all of the division actors to be woken up. Triggering this in a live game with a large amount of divisions will have a performance impact.",-1)),r(O,{class:"mt-4",message:"This action can't be undone. Are you sure the league participants are okay with this?",variant:"danger"})],void 0,!0),_:1,__:[12,13]},8,["action"])):w.value==="Preview"?(n(),i(e(N),{key:1,"modal-title":"Force Season To Start",action:()=>k(!1),"trigger-button-label":"Start Season Now","trigger-button-disabled-tooltip":e(a).enabled?void 0:"This league is disabled.","ok-button-disabled-tooltip":e(a).state.currentSeason.migrationComplete?void 0:"You cannot force this season to start as season migrations are still ongoing.",variant:"danger",permission:"api.leagues.phase_debug","data-testid":"force-end-season"},{default:s(()=>[l("p",null,[t[15]||(t[15]=o("You can force the season to go to ",-1)),r(e(p),{variant:e(C)("Active")},{default:s(()=>t[14]||(t[14]=[o("Active",-1)]),void 0,!0),_:1,__:[14]},8,["variant"]),t[16]||(t[16]=o(" immediately.",-1))]),t[18]||(t[18]=l("p",null,"The season will then progress automatically according to its configured schedule.",-1)),e(a).state.currentSeason.migrationComplete?c("",!0):(n(),i(e(P),{key:0,class:"tw-mt-4",variant:"danger",title:"Season Migration in Progress"},{default:s(()=>t[17]||(t[17]=[o("Season migrations are still ongoing. Please wait for them to finish before forcing this season to start.",-1)]),void 0,!0),_:1,__:[17]}))],void 0,!0),_:1,__:[18]},8,["action","trigger-button-disabled-tooltip","ok-button-disabled-tooltip"])):(n(),i(e(N),{key:2,"modal-title":"Force Preview Next Season",action:()=>k(!1),"trigger-button-label":"Preview Next Season","trigger-button-disabled-tooltip":e(a).enabled?void 0:"This league is disabled.",variant:"danger",permission:"api.leagues.phase_debug","data-testid":"force-preview-season"},{default:s(()=>[l("p",null,[t[20]||(t[20]=o("You can force the next season to go to ",-1)),r(e(p),{variant:e(C)("Preview")},{default:s(()=>t[19]||(t[19]=[o("Preview",-1)]),void 0,!0),_:1,__:[19]},8,["variant"]),t[21]||(t[21]=o(" immediately.",-1))]),t[22]||(t[22]=l("p",null,"The season will progress automatically according to its configured schedule.",-1))],void 0,!0),_:1,__:[22]},8,["action","trigger-button-disabled-tooltip"]))]))]),default:s(()=>[l("p",null,f(e(a).details.leagueDescription),1),l("div",ae,[r(A,{icon:"chart-bar"}),t[0]||(t[0]=o(" Overview",-1))]),r(M,{class:"mb-0",small:""},{default:s(()=>[r(B,null,{default:s(()=>[r(y,null,{default:s(()=>[r(u,null,{default:s(()=>t[1]||(t[1]=[o("League status",-1)]),void 0,!0),_:1,__:[1]}),r(u,{class:"tw-text-right"},{default:s(()=>[e(a).enabled?(n(),i(e(p),{key:0,variant:"success"},{default:s(()=>t[2]||(t[2]=[o("Enabled",-1)]),void 0,!0),_:1,__:[2]})):(n(),i(e(p),{key:1,variant:"danger"},{default:s(()=>t[3]||(t[3]=[o("Disabled",-1)]),void 0,!0),_:1,__:[3]}))],void 0,!0),_:1})],void 0,!0),_:1}),e(a).enabled?(n(),i(y,{key:0},{default:s(()=>[r(u,null,{default:s(()=>t[4]||(t[4]=[o("Total lifetime participants",-1)]),void 0,!0),_:1,__:[4]}),r(u,{class:"tw-text-right"},{default:s(()=>[o(f(e(a).currentParticipantCount),1)],void 0,!0),_:1})],void 0,!0),_:1})):c("",!0),r(y,null,{default:s(()=>[r(u,null,{default:s(()=>t[5]||(t[5]=[o("Latest season",-1)]),void 0,!0),_:1,__:[5]}),r(u,{class:"tw-text-right"},{default:s(()=>[l("span",se,[e(a).state.currentSeason?(n(),i(e(q),{key:0,to:`/leagues/${e(d)}/${e(a).state.currentSeason.seasonId}`,permission:"api.leagues.view","data-testid":"latest-season-button-link"},{default:s(()=>[o("Season "+f(e(a).state.currentSeason.seasonId),1)],void 0,!0),_:1},8,["to"])):(n(),h("span",re,"No seasons"))])],void 0,!0),_:1})],void 0,!0),_:1}),e(a).enabled&&e(a).currentOrNextSeasonSchedule?(n(),i(y,{key:1},{default:s(()=>[r(u,null,{default:s(()=>t[6]||(t[6]=[o("Current phase",-1)]),void 0,!0),_:1,__:[6]}),r(u,{class:"tw-text-right"},{default:s(()=>[e(a).enabled?(n(),i(e(p),{key:0,variant:e(C)(e(a).currentOrNextSeasonSchedule?.currentPhase.phase)},{default:s(()=>[o(f(e(G)(e(a).currentOrNextSeasonSchedule?.currentPhase.phase)),1)],void 0,!0),_:1},8,["variant"])):(n(),i(e(p),{key:1,variant:"danger"},{default:s(()=>t[7]||(t[7]=[o("Disabled",-1)]),void 0,!0),_:1,__:[7]}))],void 0,!0),_:1})],void 0,!0),_:1})):c("",!0),e(a).enabled?(n(),i(y,{key:2},{default:s(()=>[r(u,{colspan:"2"})],void 0,!0),_:1})):c("",!0)],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1},8,["id","title","error"])]),default:s(()=>[r(J,{"placement-id":"Leagues/Details",leagueId:e(d)},null,8,["leagueId"]),r(e(W),{data:e(a),label:"singleLeagueData"},null,8,["data"])]),_:1},8,["is-loading","error","alerts"])}}});export{we as default};
