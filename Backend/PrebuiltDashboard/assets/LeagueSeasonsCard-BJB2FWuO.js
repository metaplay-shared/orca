import{d as O,E as k,c as P,D as o,r as b,e as u,o as l,w as i,j as m,f as t,x as M,I as h,k as r,t as p,q as x,ae as N,a as g,y as E,B as v,_ as f,e2 as L}from"./index-DAyiym1a.js";import{M as c,a as y,b as $,c as S}from"./metaListUtils-B-xQ0HnD.js";import{g as C}from"./leagueUtils-BqF6ffxm.js";import{a as A}from"./leagues-B22oLAaC.js";const B={key:0},V={key:1},R=O({__name:"LeagueSeasonsCard",props:{leagueId:{}},setup(_){const w=_,{data:d}=k(A(w.leagueId)),T=P(()=>{const s=[];if(d.value.state.historicSeasons){const e=d.value.state.historicSeasons.map(n=>({name:"Season "+n.seasonId,id:n.seasonId,endTime:o.fromISO(n.endTime),startTime:o.fromISO(n.startTime),totalParticipants:n.totalParticipants,startedEarly:n.startedEarly,endedEarly:n.endedEarly,onSchedule:!n.startedEarly&&!n.endedEarly}));s.push(...e)}if(d.value.state.currentSeason){const e=d.value.state.currentSeason,n={name:"Season "+e.seasonId,id:e.seasonId,endTime:o.fromISO(e.endTime),startTime:o.fromISO(e.startTime),totalParticipants:d.value.currentParticipantCount,startedEarly:e.startedEarly,endedEarly:e.endedEarly,onSchedule:!e.startedEarly&&!e.endedEarly,currentSeason:!0};s.push(n)}return s}),D=[new c("Start time","startTime",y.Descending),new c("Start time","startTime",y.Ascending),new c("Participants","totalParticipants",y.Descending),new c("Participants","totalParticipants",y.Ascending)],I=[new $("startedEarly",[new S("Started early",s=>s.startedEarly,!1),new S("Ended early",s=>s.endedEarly,!1),new S("On schedule",s=>s.onSchedule,!1)])];return(s,e)=>{const n=b("meta-list-card");return l(),u(n,{title:"All Seasons","item-list":T.value,searchFields:["name"],"sort-options":D,emptyMessage:"No seasons are available to view.",filterSets:I,"data-testid":"league-seasons-list-card"},{"item-card":i(({item:a})=>[m(t(M),null,h({"top-right":i(()=>[a.startedEarly&&!a.endedEarly?(l(),u(t(f),{key:0,variant:"warning"},{default:i(()=>e[1]||(e[1]=[r("Started Early",-1)]),void 0,!0),_:1,__:[1]})):!a.startedEarly&&a.endedEarly?(l(),u(t(f),{key:1,variant:"warning"},{default:i(()=>e[2]||(e[2]=[r("Ended Early",-1)]),void 0,!0),_:1,__:[2]})):a.startedEarly&&a.endedEarly?(l(),u(t(f),{key:2,variant:"warning"},{default:i(()=>e[3]||(e[3]=[r("Started & Ended Early",-1)]),void 0,!0),_:1,__:[3]})):(l(),u(t(f),{key:3,variant:"success"},{default:i(()=>e[4]||(e[4]=[r("On Schedule",-1)]),void 0,!0),_:1,__:[4]}))]),"bottom-left":i(()=>[a.endTime.diffNow().toMillis()>0&&t(d).schedule?(l(),g("span",B,[r(p(a.startTime>t(o).utc()?"Starting":"Started")+" ",1),m(t(E),{instant:t(o).fromISO(a.startTime)},null,8,["instant"]),e[5]||(e[5]=r(" and will end in ",-1)),m(t(v),{duration:a.endTime.diffNow(),showAs:"exactDuration",hideMilliseconds:!0},null,8,["duration"]),e[6]||(e[6]=r(".",-1))])):(l(),g("span",V,[e[7]||(e[7]=r("Ended ",-1)),m(t(E),{instant:t(o).fromISO(a.endTime)},null,8,["instant"]),e[8]||(e[8]=r(" after running for ",-1)),m(t(v),{duration:a.endTime.diff(a.startTime),showAs:"exactDuration",hideMilliseconds:""},null,8,["duration"]),e[9]||(e[9]=r(".",-1))]))]),"bottom-right":i(()=>[x("div",null,p(a.totalParticipants)+" participants",1),m(t(N),{to:`/leagues/${s.leagueId}/${a.id}`,permission:"api.leagues.view"},{default:i(()=>e[10]||(e[10]=[r("View season",-1)]),void 0,!0),_:2,__:[10]},1032,["to"])]),default:i(()=>[r(p(a.name),1)],void 0,!0),_:2},[a.currentSeason&&t(d).enabled?{name:"badge",fn:i(()=>[t(d).enabled?(l(),u(t(f),{key:0,variant:t(C)(t(d).currentOrNextSeasonSchedule?.currentPhase.phase)},{default:i(()=>[r(p(t(L)(t(d).currentOrNextSeasonSchedule?.currentPhase.phase)),1)],void 0,!0),_:1},8,["variant"])):(l(),u(t(f),{key:1,variant:"danger"},{default:i(()=>e[0]||(e[0]=[r("Disabled",-1)]),void 0,!0),_:1,__:[0]}))]),key:"0"}:void 0]),1024)]),_:1},8,["item-list"])}}});export{R as default};
