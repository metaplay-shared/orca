import{bs as l,cG as a}from"./index-DAyiym1a.js";class p{timeout;method;endpoint;fnParams;fnHandler;fnError;gameServerApi;abortController;timeoutId;isStopped;requestLockCount;constructor(t,i,o,e,s,r){this.timeout=t,this.method=i,this.endpoint=o,this.fnParams=e,this.fnHandler=s,this.fnError=r,this.gameServerApi=l(),this.abortController=new AbortController,this.timeoutId=null,this.isStopped=!1,this.requestLockCount=0,this.poll().catch(n=>{console.error("Error in APIPoller constructor",n)})}stop(){this.isStopped||(this.requestLockCount>0&&this.abortController.abort(),this.timeoutId!==null&&clearTimeout(this.timeoutId),this.isStopped=!0)}async restart(){this.isStopped&&(this.isStopped=!1,await this.poll())}async getNow(){!this.isStopped&&this.requestLockCount===0&&(this.timeoutId!==null&&(this.abortController.abort(),clearTimeout(this.timeoutId)),await this.poll())}async poll(){try{this.requestLockCount++;let t;this.fnParams&&(t=this.fnParams());const i=(await this.gameServerApi.request({url:this.endpoint,method:this.method,signal:this.abortController.signal,params:t})).data;this.fnHandler(i)}catch(t){a.isCancel(t)||(this.fnError?t instanceof Error&&this.fnError(t):console.error(`Error during API polling of ${this.endpoint}: ${String(t)}`))}finally{if(this.requestLockCount--,!this.isStopped){const t=typeof this.timeout=="function"?this.timeout():this.timeout;this.timeoutId=window.setTimeout(()=>{this.poll()},t)}}}}export{p as A};
