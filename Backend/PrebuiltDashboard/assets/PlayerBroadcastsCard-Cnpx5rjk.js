import{d as E,E as S,e0 as P,c as q,r as b,e as x,o as h,w as i,j as g,f as p,s as R,x as F,a as T,t as w,ae as j,k as A,_ as H,m as z}from"./index-DAyiym1a.js";import{M as f,a as v,b as D,c as o}from"./metaListUtils-B-xQ0HnD.js";import{a as Y}from"./players-CkgXyjra.js";import{_ as G}from"./MetaGeneratedContent.vue_vue_type_script_setup_true_lang-DR9f3Dqo.js";const J={key:0},K={key:1,class:"tw-italic tw-text-neutral-500"},Q=1,et=E({__name:"PlayerBroadcastsCard",props:{playerId:{}},setup(N){const B=N,{data:M,hasPermission:$}=S(P()),{data:n}=S(Y(B.playerId)),L=["name","statusText"],O=[new D("status",[new o("Scheduled",t=>t.statusText==="Scheduled"),new o("Pending",t=>t.statusText==="Pending"),new o("Received",t=>t.statusText==="Received"),new o("Not eligible",t=>t.statusText==="Not eligible"),new o("Expired",t=>t.statusText==="Expired")]),new D("attachments",[new o("Has attachments",t=>t.attachments!==null&&t.attachments.length>0),new o("No attachments",t=>t.attachments===null||t.attachments.length===0)])],C=[new f("Start time","startAt",v.Ascending),new f("Start time","startAt",v.Descending),new f("Status","statusSortOrder",v.Ascending),new f("Status","statusSortOrder",v.Descending)],k=q(()=>{if(!n.value)return;const t=[];return(M.value??[]).forEach(s=>{const r=s.params.id,e=s.params;let c,d,l,u,m;if((n.value.model.receivedBroadcastIds??[]).includes(r))c="Received",d=!1,l="success",u=`${n.value.model.playerName||"The player"} has received this broadcast.`,m=2;else{const _=new Date,V=new Date(e.startAt),y=new Date(e.endAt);y>_&&V<_?I(n.value,e)?(c="Pending",d=!1,l="neutral",u=`${n.value.model.playerName||"The player"} will receive this broadcast the next time they connect.`,m=1):(c="Not eligible",d=!0,l="neutral",u=`${n.value.model.playerName||"The player"} is not eligible to receive this broadcast.`,m=3):y>_?(c="Scheduled",d=!0,l="neutral",u="This broadcast has not yet started.",m=0):(c="Expired",d=!0,l="neutral",u=`This broadcast has expired and ${n.value.model.playerName||"the player"} did not receive it.`,m=4)}t.push({id:r,name:e.name,contents:e.contents,startAt:e.startAt,attachments:e.contents.contents?.consumableRewards??[],statusText:c,statusMuted:d,statusBadgeVariant:l,statusTooltip:u,statusSortOrder:m})}),t});function I(t,a){let s=!1;return a.isTargeted?a.targetPlayers?.includes(t.id)?s=!0:a.targetCondition?.requireAllSegments?a.targetCondition.requireAllSegments.every(r=>t.matchingSegments.includes(r))&&(s=!0):a.targetCondition?.requireAnySegment&&a.targetCondition.requireAnySegment.some(r=>t.matchingSegments?.includes(r))&&(s=!0):s=!0,s}return(t,a)=>{const s=b("fa-icon"),r=b("meta-list-card");return h(),x(r,{title:"Broadcast Log",icon:"broadcast-tower",itemList:k.value,tooltip:"All broadcasts in the game.",searchFields:L,filterSets:O,sortOptions:C,defaultSortOption:Q,emptyMessage:`${p($)?"No broadcasts sent yet!":"You do not have permissions to view broadcasts."}`,"data-testid":"player-broadcasts-card"},{"item-card":i(e=>[g(p(R),{extraMListItemMargin:""},{header:i(()=>[g(p(F),{noLeftPadding:""},{badge:i(()=>[Object.keys(e.item.attachments).length>0?(h(),x(s,{key:0,class:"tw-mt-1 tw-text-neutral-500",icon:"paperclip",size:"sm"})):z("",!0)]),"top-right":i(()=>[g(p(H),{tooltip:e.item.statusTooltip,variant:e.item.statusBadgeVariant},{default:i(()=>[A(w(e.item.statusText),1)],void 0,!0),_:2},1032,["tooltip","variant"])]),"bottom-right":i(()=>[g(p(j),{to:`/broadcasts/${e.item.id}`},{default:i(()=>a[0]||(a[0]=[A("View broadcast",-1)]),void 0,!0),_:2,__:[0]},1032,["to"])]),default:i(()=>[e.item.statusMuted?(h(),T("span",K,w(e.item.name),1)):(h(),T("span",J,w(e.item.name),1))],void 0,!0),_:2},1024)]),default:i(()=>[g(G,{value:e.item.contents,"is-targeting-multiple-players":"","logic-version":p(n).model.logicVersion},null,8,["value","logic-version"])],void 0,!0),_:2},1024)]),_:1},8,["itemList","emptyMessage"])}}});export{et as default};
